2024/01/18 18:39:42 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.13 (main, Sep 11 2023, 13:44:35) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 2098179334
    GPU 0,1,2,3,4,5,6: NVIDIA A100-SXM4-80GB
    CUDA_HOME: /usr/local/cuda-11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.64
    GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.3) 9.4.0
    PyTorch: 1.13.0
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.14.0
    OpenCV: 4.8.1
    MMEngine: 0.10.1

Runtime environment:
    cudnn_benchmark: True
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 2098179334
    Distributed launcher: pytorch
    Distributed training: True
    GPU number: 4
------------------------------------------------------------

2024/01/18 18:39:44 - mmengine - INFO - Config:
checkpoint_config = dict(by_epoch=False, interval=1000, max_keep_ckpts=1)
checkpoint_file = 'https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth'
crop_size = (
    896,
    896,
)
custom_imports = dict(allow_failed_imports=False, imports='mmpretrain.models')
data = dict(
    samples_per_gpu=1,
    test=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]),
    train=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(reduce_zero_label=True, type='LoadAnnotations'),
        dict(img_scale=(
            3584,
            896,
        ), ratio_range=(
            0.5,
            2.0,
        ), type='Resize'),
        dict(cat_max_ratio=0.75, crop_size=(
            896,
            896,
        ), type='RandomCrop'),
        dict(prob=0.5, type='RandomFlip'),
        dict(type='PhotoMetricDistortion'),
        dict(
            mean=[
                123.675,
                116.28,
                103.53,
            ],
            std=[
                58.395,
                57.12,
                57.375,
            ],
            to_rgb=True,
            type='Normalize'),
        dict(pad_val=0, seg_pad_val=255, size=(
            896,
            896,
        ), type='Pad'),
        dict(type='DefaultFormatBundle'),
        dict(keys=[
            'img',
            'gt_semantic_seg',
        ], type='Collect'),
    ]),
    val=dict(pipeline=[
        dict(type='LoadImageFromFile'),
        dict(
            flip=False,
            img_scale=(
                3584,
                896,
            ),
            transforms=[
                dict(keep_ratio=True, type='Resize'),
                dict(size_divisor=32, type='ResizeToMultiple'),
                dict(type='RandomFlip'),
                dict(
                    mean=[
                        123.675,
                        116.28,
                        103.53,
                    ],
                    std=[
                        58.395,
                        57.12,
                        57.375,
                    ],
                    to_rgb=True,
                    type='Normalize'),
                dict(keys=[
                    'img',
                ], type='ImageToTensor'),
                dict(keys=[
                    'img',
                ], type='Collect'),
            ],
            type='MultiScaleFlipAug'),
    ]))
data_preprocessor = dict(
    bgr_to_rgb=True,
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    pad_val=0,
    seg_pad_val=255,
    size=(
        896,
        896,
    ),
    std=[
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = 'data/ade/ADEChallengeData2016'
dataset_type = 'ADE20KDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=False, interval=16000, type='CheckpointHook'),
    logger=dict(interval=50, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
evaluation = dict(interval=16000, metric='mIoU', save_best='mIoU')
img_norm_cfg = dict(
    mean=[
        123.675,
        116.28,
        103.53,
    ],
    std=[
        58.395,
        57.12,
        57.375,
    ],
    to_rgb=True)
img_ratios = [
    0.5,
    0.75,
    1.0,
    1.25,
    1.5,
    1.75,
]
launcher = 'pytorch'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=False)
lr_config = dict(
    _delete_=True,
    by_epoch=False,
    min_lr=0.0,
    policy='poly',
    power=1.0,
    warmup='linear',
    warmup_iters=1500,
    warmup_ratio=1e-06)
model = dict(
    auxiliary_head=dict(
        align_corners=False,
        channels=256,
        concat_input=False,
        dropout_ratio=0.1,
        in_channels=384,
        in_index=2,
        loss_decode=dict(
            loss_weight=0.4, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        num_convs=1,
        type='FCNHead'),
    backbone=dict(
        arch='small',
        drop_path_rate=0.3,
        gap_before_final_norm=False,
        init_cfg=dict(
            checkpoint=
            'https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth',
            prefix='backbone.',
            type='Pretrained'),
        layer_scale_init_value=1.0,
        out_indices=[
            0,
            1,
            2,
            3,
        ],
        type='mmpretrain.ConvNeXt'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_val=0,
        seg_pad_val=255,
        size=(
            896,
            896,
        ),
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='SegDataPreProcessor'),
    decode_head=dict(
        align_corners=False,
        channels=512,
        dropout_ratio=0.1,
        in_channels=[
            96,
            192,
            384,
            768,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='SyncBN'),
        num_classes=150,
        pool_scales=(
            1,
            2,
            3,
            6,
        ),
        type='UPerHead'),
    pretrained=None,
    test_cfg=dict(mode='whole'),
    train_cfg=dict(),
    type='EncoderDecoder')
norm_cfg = dict(requires_grad=True, type='SyncBN')
optim_wrapper = dict(
    constructor='LearningRateDecayOptimizerConstructor',
    loss_scale='dynamic',
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=0.0001, type='AdamW', weight_decay=0.05),
    paramwise_cfg=dict(decay_rate=0.9, decay_type='stage_wise', num_layers=12),
    type='AmpOptimWrapper')
optimizer = dict(
    betas=(
        0.9,
        0.999,
    ),
    constructor='CustomLayerDecayOptimizerConstructor',
    lr=2e-05,
    paramwise_cfg=dict(
        depths=[
            2,
            2,
            48,
            4,
        ],
        layer_decay_rate=0.95,
        num_layers=56,
        offset_lr_scale=1.0),
    type='AdamW',
    weight_decay=0.05)
optimizer_config = dict(
    _delete_=True, grad_clip=dict(max_norm=0.1, norm_type=2))
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=160000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
pretrained = 'https://huggingface.co/OpenGVLab/InternImage/resolve/main/internimage_g_pretrainto22k_384.pth'
resume = False
runner = dict(type='IterBasedRunner')
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        flip=False,
        img_scale=(
            3584,
            896,
        ),
        transforms=[
            dict(keep_ratio=True, type='Resize'),
            dict(size_divisor=32, type='ResizeToMultiple'),
            dict(type='RandomFlip'),
            dict(
                mean=[
                    123.675,
                    116.28,
                    103.53,
                ],
                std=[
                    58.395,
                    57.12,
                    57.375,
                ],
                to_rgb=True,
                type='Normalize'),
            dict(keys=[
                'img',
            ], type='ImageToTensor'),
            dict(keys=[
                'img',
            ], type='Collect'),
        ],
        type='MultiScaleFlipAug'),
]
train_cfg = dict(
    max_iters=160000, type='IterBasedTrainLoop', val_interval=16000)
train_dataloader = dict(
    batch_size=2,
    dataset=dict(
        data_prefix=dict(
            img_path='images/training', seg_map_path='annotations/training'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(
                keep_ratio=True,
                ratio_range=(
                    0.5,
                    2.0,
                ),
                scale=(
                    2048,
                    512,
                ),
                type='RandomResize'),
            dict(
                cat_max_ratio=0.75, crop_size=(
                    512,
                    512,
                ), type='RandomCrop'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PhotoMetricDistortion'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(reduce_zero_label=True, type='LoadAnnotations'),
    dict(img_scale=(
        3584,
        896,
    ), ratio_range=(
        0.5,
        2.0,
    ), type='Resize'),
    dict(cat_max_ratio=0.75, crop_size=(
        896,
        896,
    ), type='RandomCrop'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PhotoMetricDistortion'),
    dict(
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        to_rgb=True,
        type='Normalize'),
    dict(pad_val=0, seg_pad_val=255, size=(
        896,
        896,
    ), type='Pad'),
    dict(type='DefaultFormatBundle'),
    dict(keys=[
        'img',
        'gt_semantic_seg',
    ], type='Collect'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(
        transforms=[
            [
                dict(keep_ratio=True, scale_factor=0.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=0.75, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.0, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.25, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.5, type='Resize'),
                dict(keep_ratio=True, scale_factor=1.75, type='Resize'),
            ],
            [
                dict(direction='horizontal', prob=0.0, type='RandomFlip'),
                dict(direction='horizontal', prob=1.0, type='RandomFlip'),
            ],
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='PackSegInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        data_prefix=dict(
            img_path='images/validation',
            seg_map_path='annotations/validation'),
        data_root='data/ade/ADEChallengeData2016',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                2048,
                512,
            ), type='Resize'),
            dict(reduce_zero_label=True, type='LoadAnnotations'),
            dict(type='PackSegInputs'),
        ],
        type='ADE20KDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/upernet_convnext_4xb4-160k_ade20k-896x896_small'

2024/01/18 18:39:46 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/01/18 18:39:49 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2024/01/18 18:39:50 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth
2024/01/18 18:39:50 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: norm0.weight, norm0.bias, norm1.weight, norm1.bias, norm2.weight, norm2.bias, norm3.weight, norm3.bias

Name of parameter - Initialization information

backbone.downsample_layers.0.0.weight - torch.Size([96, 3, 4, 4]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.0.0.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.0.1.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.0.1.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.1.0.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.1.0.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.1.1.weight - torch.Size([192, 96, 2, 2]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.1.1.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.2.0.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.2.0.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.2.1.weight - torch.Size([384, 192, 2, 2]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.2.1.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.3.0.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.3.0.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.3.1.weight - torch.Size([768, 384, 2, 2]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.downsample_layers.3.1.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.0.gamma - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.0.depthwise_conv.weight - torch.Size([96, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.0.depthwise_conv.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.0.norm.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.0.norm.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.0.pointwise_conv1.weight - torch.Size([384, 96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.0.pointwise_conv1.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.0.pointwise_conv2.weight - torch.Size([96, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.0.pointwise_conv2.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.1.gamma - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.1.depthwise_conv.weight - torch.Size([96, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.1.depthwise_conv.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.1.norm.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.1.norm.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.1.pointwise_conv1.weight - torch.Size([384, 96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.1.pointwise_conv1.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.1.pointwise_conv2.weight - torch.Size([96, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.1.pointwise_conv2.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.2.gamma - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.2.depthwise_conv.weight - torch.Size([96, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.2.depthwise_conv.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.2.norm.weight - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.2.norm.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.2.pointwise_conv1.weight - torch.Size([384, 96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.2.pointwise_conv1.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.2.pointwise_conv2.weight - torch.Size([96, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.0.2.pointwise_conv2.bias - torch.Size([96]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.0.gamma - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.0.depthwise_conv.weight - torch.Size([192, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.0.depthwise_conv.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.0.norm.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.0.norm.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.0.pointwise_conv1.weight - torch.Size([768, 192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.0.pointwise_conv1.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.0.pointwise_conv2.weight - torch.Size([192, 768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.0.pointwise_conv2.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.1.gamma - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.1.depthwise_conv.weight - torch.Size([192, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.1.depthwise_conv.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.1.norm.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.1.norm.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.1.pointwise_conv1.weight - torch.Size([768, 192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.1.pointwise_conv1.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.1.pointwise_conv2.weight - torch.Size([192, 768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.1.pointwise_conv2.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.2.gamma - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.2.depthwise_conv.weight - torch.Size([192, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.2.depthwise_conv.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.2.norm.weight - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.2.norm.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.2.pointwise_conv1.weight - torch.Size([768, 192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.2.pointwise_conv1.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.2.pointwise_conv2.weight - torch.Size([192, 768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.1.2.pointwise_conv2.bias - torch.Size([192]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.0.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.0.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.0.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.0.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.0.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.0.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.0.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.0.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.0.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.1.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.1.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.1.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.1.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.1.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.1.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.1.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.1.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.1.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.2.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.2.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.2.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.2.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.2.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.2.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.2.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.2.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.2.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.3.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.3.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.3.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.3.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.3.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.3.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.3.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.3.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.3.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.4.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.4.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.4.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.4.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.4.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.4.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.4.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.4.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.4.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.5.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.5.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.5.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.5.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.5.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.5.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.5.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.5.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.5.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.6.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.6.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.6.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.6.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.6.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.6.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.6.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.6.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.6.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.7.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.7.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.7.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.7.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.7.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.7.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.7.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.7.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.7.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.8.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.8.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.8.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.8.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.8.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.8.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.8.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.8.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.8.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.9.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.9.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.9.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.9.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.9.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.9.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.9.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.9.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.9.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.10.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.10.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.10.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.10.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.10.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.10.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.10.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.10.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.10.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.11.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.11.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.11.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.11.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.11.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.11.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.11.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.11.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.11.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.12.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.12.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.12.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.12.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.12.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.12.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.12.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.12.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.12.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.13.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.13.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.13.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.13.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.13.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.13.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.13.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.13.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.13.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.14.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.14.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.14.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.14.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.14.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.14.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.14.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.14.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.14.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.15.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.15.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.15.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.15.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.15.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.15.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.15.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.15.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.15.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.16.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.16.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.16.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.16.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.16.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.16.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.16.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.16.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.16.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.17.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.17.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.17.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.17.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.17.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.17.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.17.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.17.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.17.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.18.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.18.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.18.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.18.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.18.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.18.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.18.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.18.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.18.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.19.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.19.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.19.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.19.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.19.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.19.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.19.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.19.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.19.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.20.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.20.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.20.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.20.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.20.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.20.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.20.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.20.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.20.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.21.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.21.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.21.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.21.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.21.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.21.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.21.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.21.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.21.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.22.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.22.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.22.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.22.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.22.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.22.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.22.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.22.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.22.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.23.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.23.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.23.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.23.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.23.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.23.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.23.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.23.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.23.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.24.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.24.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.24.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.24.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.24.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.24.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.24.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.24.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.24.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.25.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.25.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.25.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.25.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.25.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.25.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.25.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.25.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.25.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.26.gamma - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.26.depthwise_conv.weight - torch.Size([384, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.26.depthwise_conv.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.26.norm.weight - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.26.norm.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.26.pointwise_conv1.weight - torch.Size([1536, 384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.26.pointwise_conv1.bias - torch.Size([1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.26.pointwise_conv2.weight - torch.Size([384, 1536]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.2.26.pointwise_conv2.bias - torch.Size([384]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.0.gamma - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.0.depthwise_conv.weight - torch.Size([768, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.0.depthwise_conv.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.0.norm.weight - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.0.norm.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.0.pointwise_conv1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.0.pointwise_conv1.bias - torch.Size([3072]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.0.pointwise_conv2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.0.pointwise_conv2.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.1.gamma - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.1.depthwise_conv.weight - torch.Size([768, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.1.depthwise_conv.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.1.norm.weight - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.1.norm.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.1.pointwise_conv1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.1.pointwise_conv1.bias - torch.Size([3072]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.1.pointwise_conv2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.1.pointwise_conv2.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.2.gamma - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.2.depthwise_conv.weight - torch.Size([768, 1, 7, 7]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.2.depthwise_conv.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.2.norm.weight - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.2.norm.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.2.pointwise_conv1.weight - torch.Size([3072, 768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.2.pointwise_conv1.bias - torch.Size([3072]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.2.pointwise_conv2.weight - torch.Size([768, 3072]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.stages.3.2.pointwise_conv2.bias - torch.Size([768]): 
PretrainedInit: load from https://download.openmmlab.com/mmclassification/v0/convnext/downstream/convnext-small_3rdparty_32xb128-noema_in1k_20220301-303e75e3.pth 

backbone.norm0.weight - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.norm0.bias - torch.Size([96]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.norm1.weight - torch.Size([192]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.norm1.bias - torch.Size([192]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.norm2.weight - torch.Size([384]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.norm2.bias - torch.Size([384]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.norm3.weight - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.norm3.bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([150, 512, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([150]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.psp_modules.0.1.conv.weight - torch.Size([512, 768, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.0.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.conv.weight - torch.Size([512, 768, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.1.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.conv.weight - torch.Size([512, 768, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.2.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.conv.weight - torch.Size([512, 768, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.psp_modules.3.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.conv.weight - torch.Size([512, 2816, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.bottleneck.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.bottleneck.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.lateral_convs.0.conv.weight - torch.Size([512, 96, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.lateral_convs.0.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.lateral_convs.0.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.lateral_convs.1.conv.weight - torch.Size([512, 192, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.lateral_convs.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.lateral_convs.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.lateral_convs.2.conv.weight - torch.Size([512, 384, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.lateral_convs.2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.lateral_convs.2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_convs.0.conv.weight - torch.Size([512, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_convs.0.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_convs.0.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_convs.1.conv.weight - torch.Size([512, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_convs.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_convs.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_convs.2.conv.weight - torch.Size([512, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_convs.2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_convs.2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_bottleneck.conv.weight - torch.Size([512, 2048, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

decode_head.fpn_bottleneck.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.fpn_bottleneck.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.conv_seg.weight - torch.Size([150, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.conv_seg.bias - torch.Size([150]): 
NormalInit: mean=0, std=0.01, bias=0 

auxiliary_head.convs.0.conv.weight - torch.Size([256, 384, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2024/01/18 18:39:50 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/01/18 18:39:50 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/01/18 18:39:50 - mmengine - INFO - Checkpoints will be saved to /media/Disk2/LiuYue/Visualize/segmentation/work_dirs/upernet_convnext_4xb4-160k_ade20k-896x896_small.
2024/01/18 18:40:55 - mmengine - INFO - Iter(train) [    50/160000]  base_lr: 3.2689e-06 lr: 8.3092e-07  eta: 2 days, 9:19:58  time: 0.8706  data_time: 0.0056  memory: 44457  loss: 1.9755  decode.loss_ce: 1.4006  decode.acc_seg: 1.6345  aux.loss_ce: 0.5749  aux.acc_seg: 0.2839
2024/01/18 18:41:38 - mmengine - INFO - Iter(train) [   100/160000]  base_lr: 6.6045e-06 lr: 1.6788e-06  eta: 1 day, 23:56:38  time: 0.8699  data_time: 0.0058  memory: 9817  loss: 1.6205  decode.loss_ce: 1.1233  decode.acc_seg: 34.9507  aux.loss_ce: 0.4972  aux.acc_seg: 1.2324
